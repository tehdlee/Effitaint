sources:
  - { kind: call, method: "<javax.servlet.ServletRequest: java.lang.String getParameter(java.lang.String)>", index: result }
  - { kind: call, method: "<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>", index: "result[*]" }
  - { kind: call, method: "<javax.servlet.ServletRequest: java.util.Map getParameterMap()>", index: result}
  - { kind: call, method: "<javax.servlet.ServletRequest: javax.servlet.ServletInputStream getInputStream()>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: javax.servlet.http.Cookie[] getCookies()>", index: "result[*]" }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>", index: result }
  - { kind: call, method: "<javax.servlet.ServletRequest: java.util.Enumeration getHeaders(java.lang.String)>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>", index: result }
  - { kind: call, method: "<javax.servlet.ServletRequest: java.util.Enumeration getHeaderNames()>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>", index: result }
  - { kind: call, method: "<javax.servlet.ServletConfig: java.lang.String getInitParameter(java.lang.String)>", index: result }
  - { kind: call, method: "<javax.servlet.ServletConfig: java.util.Enumeration getInitParameterNames()>", index: result }
  - { kind: call, method: "<javax.servlet.ServletRequest: java.lang.String getProtocol()>", index: result }
  - { kind: call, method: "<javax.servlet.ServletRequest: java.lang.String getScheme()>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.lang.String getAuthType()>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.lang.String getQueryString()>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>", index: result }
  - { kind: call, method: "<javax.servlet.http.HttpServletRequest: java.lang.StringBuffer getRequestURL()>", index: result }
  - { kind: call, method: "<com.oreilly.servlet.MultipartRequest: java.lang.String getParameter(java.lang.String)>", index: result }

sinks:
  - { method: "<java.io.PrintWriter: void println(java.lang.String)>", index: 0 }
  - { method: "<java.io.PrintWriter: void println(java.lang.Object)>", index: 0 }
  - { method: "<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>", index: 0 }
  - { method: "<java.sql.Statement: boolean execute(java.lang.String)>", index: 0 }
  - { method: "<java.sql.Statement: int executeUpdate(java.lang.String,int[])>", index: 0 }
  - { method: "<java.sql.Statement: int executeUpdate(java.lang.String)>", index: 0 }
  - { method: "<java.sql.Statement: int executeUpdate(java.lang.String,int)>", index: 0 }
  - { method: "<java.sql.Statement: int executeUpdate(java.lang.String,java.lang.String[])>", index: 0 }
  - { method: "<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>", index: 0 }
  - { method: "<java.io.File: boolean createNewFile()>", index: base }
  - { method: "<java.io.FileWriter: void <init>(java.lang.String)>", index: 0 }
  - { method: "<java.io.FileInputStream: void <init>(java.lang.String)>", index: 0 }
  - { method: "<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>", index: 0 }

transfers:
  - { method: "<java.lang.String: java.lang.String toUpperCase()>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String toLowerCase()>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String substring(int)>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String concat(java.lang.String)>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String concat(java.lang.String)>", from: 0, to: result }
  - { method: "<java.lang.String: java.lang.String replace(java.lang.Char,java.lang.Char)>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>", from: base, to: result }
  - { method: "<java.lang.String: char[] toCharArray()>", from: base, to: result }
  - { method: "<java.lang.String: void <init>(char[])>", from: 0, to: base }
  - { method: "<java.lang.String: void getChars(int,int,char[],int)>", from: base, to: 2 }
  - { method: "<java.util.HashMap: java.lang.String get(java.lang.Object)>", from: 0, to: result }
  - { method: "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>", from: "1[*]", to: result }
  - { method: "<java.lang.StringBuffer: void <init>(java.lang.String)>", from: 0, to: base }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>", from: 0, to: base }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>", from: 0, to: result }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>", from: base, to: result }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>", from: base, to: result }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>", from: base, to: result }
  - { method: "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>", from: base, to: result }
  - { method: "<java.lang.StringBuffer: java.lang.String toString()>", from: base, to: result }
  - { method: "<java.lang.StringBuilder: void <init>(java.lang.String)>", from: 0, to: base }
  - { method: "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>", from: 0, to: base }
  - { method: "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>", from: 0, to: result }
  - { method: "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>", from: base, to: result }
  - { method: "<java.lang.StringBuilder: java.lang.String toString()>", from: base, to: result }
  - { method: "<java.io.FileWriter: void <init>(java.lang.String)>", from: 0, to: base }
  - { method: "<java.io.FileInputStream: void <init>(java.lang.String)>", from: 0, to: base }
  - { method: "<java.io.File: void <init>(java.lang.String)>", from: 0, to: base }
  - { method: "<java.util.Enumeration: java.lang.Object nextElement()>", from: base, to: result }
  - { method: "<java.util.Enumeration: java.util.Enumeration nextElement(java.lang.String)>", from: base, to: result }
  - { method: "<java.lang.String: java.lang.String valueOf(java.lang.String)>", from: 0, to: result }
  - { method: "<java.lang.String: java.lang.String valueOf(java.lang.Object)>", from: 0, to: result }
  - { method: "<java.lang.String: java.lang.String valueOf(char[])>", from: 0, to: result }
  - { method: "<java.lang.String: java.lang.String valueOf(int)>", from: 0, to: result }
#  Entry泛型类型,iterator类型相关transfer
  - { method: "<java.util.Map: java.util.Set entrySet()>", from: base, to: result }
  - { method: "<java.util.Set: java.util.Iterator iterator()>", from: base, to: result }
  - { method: "<java.util.Iterator: java.lang.Object next()>", from: base, to: result }
  - { method: "<java.util.Map$Entry: java.lang.Object getKey()>", from: base, to: result }
  - { method: "<java.util.Map$Entry: java.lang.Object getValue()>", from: base, to: result }
  - { method: "<javax.servlet.http.Cookie: java.lang.String getName()>", from: base, to: result }
  - { method: "<javax.servlet.http.Cookie: java.lang.String getValue()>", from: base, to: result }
  - { method: "<javax.servlet.http.Cookie: java.lang.String getComment()>", from: base, to: result }
  - { method: "<java.io.InputStreamReader: void <init>(java.io.InputStream)>", from: 0, to: base }
  - { method: "<java.io.BufferedReader: void <init>(java.io.Reader)>", from: 0, to: base }
  - { method: "<java.io.BufferedReader: void <init>(java.io.Reader,int)>", from: 0, to: base }
  - { method: "<java.io.BufferedReader: java.lang.String readLine()>", from: base, to: result }

call-site-mode: true
